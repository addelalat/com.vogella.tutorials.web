<section id="firstjersey">
	<title>Create your first RESTful Webservice</title>
	<section id="firstjersey_project">
		<title>Create a new web project </title>
		<para>
			Create a new
			<wordasword>Dynamic Web Project</wordasword>
			called
			<wordasword>com.vogella.jersey.first</wordasword>
			.
		</para>
		<para>
			<mediaobject>
				<imageobject>
					<imagedata fileref="images/jerseryfirst10.png" />
				</imageobject>
			</mediaobject>
		</para>

		<para>
			Ensure that you create the
			<filename>web.xml</filename>
			deployment descriptor.
		</para>

		<para>
			<mediaobject>
				<imageobject>
					<imagedata fileref="images/jerseryfirst20.png" />
				</imageobject>
			</mediaobject>
		</para>

		<para>
			<mediaobject>
				<imageobject>
					<imagedata fileref="images/jerseryfirst30.png" />
				</imageobject>
			</mediaobject>
		</para>
	</section>
	<section id="firstjersey_libraries">
		<title>Configure jersey usage</title>
		<para>
			See
			<xref linkend="jerseyprojectsetup" />
			for the setup.
		</para>
	</section>

	<section id="firstjersey_class">
		<title>Java Class</title>
		<para>Create the following class.</para>
		<para>
			<programlisting language="java">
				<xi:include xmlns:xi="http://www.w3.org/2001/XInclude" parse="text" href="./examples/first/Hello.java" />
			</programlisting>
		</para>
		<para>
			This class
			register itself as a get
			resource via the
			<code>@GET</code>
			annotation.
			Via the
			<code>@Produces</code>
			annotation it
			defines that it delivers
			the
			<wordasword>text</wordasword>
			and the
			<wordasword>HTML</wordasword>
			MIME types. It also defines via the
			<code>@Path</code>
			annotation that its service
			is available under the
			<parameter>hello</parameter>
			URL.
		</para>
		<para>
			The browser will always request the HTML MIME type. To see the
			text
			version, you can use tool like
			<ulink url="http://www.vogella.com/tutorials/Ubuntu/article.html#network_curl">curl</ulink>
			.
		</para>
	</section>
	<section id="first_servletdispatcher">
		<title>Define Jersey Servlet dispatcher</title>
		<para>
			You need to register Jersey as the servlet dispatcher for REST
			requests. Open the file
			<filename>web.xml</filename>
			and modify it to the following.
		</para>
		<para>
			<programlisting language="xml">
				<xi:include xmlns:xi="http://www.w3.org/2001/XInclude" parse="text" href="./examples/first/web.xml" />
			</programlisting>
		</para>
		<para>
			The
			parameter
			<parameter>jersey.config.server.provider.packages</parameter>
			defines in
			which
			package Jersey will look for the web service classes.
			This
			property must point to your resources
			classes. The URL pattern
			defines the part of the base URL your application will be placed.
		</para>
	</section>

	<section id="first_run">
		<title>Run your rest service</title>
		<para>
			Run you web application in Eclipse. See
			<ulink url="http://www.vogella.com/tutorials/EclipseWTP/article.html">Eclipse WTP</ulink>
			for details on how to run dynamic web applications.
		</para>
		<para>
			You should be able to access your resources under the following
			URL:
			http://localhost:8080/com.vogella.jersey.first/rest/hello
		</para>
		<para>
			<mediaobject>
				<imageobject>
					<imagedata fileref="images/jerseryfirstresult80.png"/>
				</imageobject>
				<textobject>
					<phrase>Result of the Jersey service</phrase>
				</textobject>
			</mediaobject>
		</para>
		<para>

			This name
			is
			derived from the "display-name" defined in the
			<filename>web.xml</filename>
			file,
			augmented with the servlet-mapping URL-pattern and the
			<parameter>hello</parameter>
			<code>@Path</code>
			annotation from your class file.
			You
			should get
			the message "Hello
			Jersey".
		</para>
		<para>
			The browser requests the HTML representation of your resource.
			In the next chapter we are going to write a client
			which will read
			the XML representation.
		</para>
	</section>


</section>