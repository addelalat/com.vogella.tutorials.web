[[firstjersey">
== Create your first RESTful Webservice
[[firstjersey_project">
=== Create a new web project 
		
			Create a new
			_Dynamic Web Project_
			called
			_com.vogella.jersey.first_
			.
		
		
image::jerseryfirst10.png[]
		

		
			Ensure that you create the
			`web.xml`
			deployment descriptor.
		

		
image::jerseryfirst20.png[]
		

		
image::jerseryfirst30.png[]
		

[[firstjersey_libraries">
=== Configure jersey usage
		
			See
			<<jerseyprojectsetup>>
			for the setup.
		


[[firstjersey_class">
=== Java Class
		Create the following class.
		
[source,java]
----
include::res/first/Hello.java[]
----
		
		
			This class
			register itself as a get
			resource via the
			<code>@GET</code>
			annotation.
			Via the
			<code>@Produces</code>
			annotation it
			defines that it delivers
			the
			_text_
			and the
			_HTML_
			MIME types. It also defines via the
			<code>@Path</code>
			annotation that its service
			is available under the
			`hello`
			URL.
		
		
			The browser will always request the HTML MIME type. To see the
			text
			version, you can use tool like
http://www.vogella.com/tutorials/Ubuntu/article.html#network_curl">curl]
			.
		

[[first_servletdispatcher">
=== Define Jersey Servlet dispatcher
		
			You need to register Jersey as the servlet dispatcher for REST
			requests. Open the file
			`web.xml`
			and modify it to the following.
		
		
			<programlisting language="xml">
				<xi:include xmlns:xi="http://www.w3.org/2001/XInclude" parse="text" href="./examples/first/web.xml[]
----
		
		
			The
			parameter
			`jersey.config.server.provider.packages`
			defines in
			which
			package Jersey will look for the web service classes.
			This
			property must point to your resources
			classes. The URL pattern
			defines the part of the base URL your application will be placed.
		


[[first_run">
=== Run your rest service
		
			Run you web application in Eclipse. See
http://www.vogella.com/tutorials/EclipseWTP/article.html[Eclipse WTP]
			for details on how to run dynamic web applications.
		
		
			You should be able to access your resources under the following
			URL:
			http://localhost:8080/com.vogella.jersey.first/rest/hello
		
		
image::jerseryfirstresult80.png"/>
				</imageobject>
				<textobject>
					<phrase>Result of the Jersey service</phrase>
				</textobject>
			</mediaobject>
		
		

			This name
			is
			derived from the "display-name" defined in the
			`web.xml`
			file,
			augmented with the servlet-mapping URL-pattern and the
			`hello`
			<code>@Path</code>
			annotation from your class file.
			You
			should get
			the message "Hello
			Jersey".
		
		
			The browser requests the HTML representation of your resource.
			In the next chapter we are going to write a client
			which will read
			the XML representation.
		



