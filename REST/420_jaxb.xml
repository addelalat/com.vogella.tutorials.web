<section id="jaxb">
== RESTful web services and JAXB
	
		JAX-RS supports the automatic creation of XML and JSON via JAXB. For
		an introduction into XML please see
		http://www.vogella.com/tutorials/JavaXML/article.html">Java and XML - Tutorial</ulink>
		. For an introduction into JAXB please see
		http://www.vogella.com/tutorials/JAXB/article.html">JAXB</ulink>
		. You can continue this tutorial without reading these tutorials, but
		they contain more background information.
	
	<section id="jaxb_project">
=== Create necessary classes
		
			Create a new
			<wordasword>Dynamic Web Project</wordasword>
			called
			<wordasword>com.vogella.jersey.jaxb</wordasword>
			. Ensure you create
			`web.xml`
			deployment descriptor.
		


	<section>
=== Configure jersey usage
		
			See
			<xref linkend="jerseyprojectsetup" />
			for the setup.
		


	<section id="jaxb_domainmodel">
=== Create project
		Create your domain class.
		
[source,java]
-----
include::res/jaxb/Todo.java[]
----
		
		
			Create the following resource class. This class simply returns
			an
			instance of the
			<code>Todo</code>
			class.
		
		
[source,java]
-----
include::res/jaxb/TodoResource.java[]
----
		
		
			Change
			`web.xml`
			to the following.
		
		
			<programlisting language="xml">
				<xi:include xmlns:xi="http://www.w3.org/2001/XInclude" parse="text" href="./examples/jaxb/web.xml[]
----
		
		
			Run you web application in Eclipse and validate that you can
			access
			your service. Your application should be
			available under the
			following
			URL.
		
		
			<programlisting language="text">
				<xi:include xmlns:xi="http://www.w3.org/2001/XInclude" parse="text" href="./examples/links/todo1.txt[]
----
		


	<section id="jaxb_client">
=== Create a client
		
			Create a new Java project
			<wordasword>de.vogella.jersey.jaxb.client</wordasword>
			and add the
			Jersey JARs to the project and the project build path.
			Create the
			following test class.
		
		
[source,java]
-----
include::res/jaxb/Test.java[]
----
		



