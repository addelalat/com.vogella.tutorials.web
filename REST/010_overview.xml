<section id="rest">
	<title>REST - Representational State Transfer</title>
	<section id="rest_overview">
		<title>What is REST?</title>
		<para>
			REST is an architectural style which is
			based on web-standards
			and the HTTP protocol. REST was first
			described
			by Roy Fielding in
			2000. In a REST based architecture everything is a resource. A
			resource is
			accessed via a common interface based on the HTTP standard
			methods.
			In a REST based architecture you typically have a REST server
			which
			provides access to the resources and a REST client which
			accesses and
			modifies the REST resources.
		</para>
		<para>
			Every resource should support
			the HTTP
			common
			operations.
			Resources
			are
			identified by global
			IDs
			(which
			are
			typically
			URIs).
			REST allows that resources have different representations, e.g.,
			text, XML, JSON etc. The REST client can ask for a specific
			representation
			via the HTTP protocol
			(content
			negotiation).
		</para>
	</section>
	<section id="rest_httpmethods">
		<title>HTTP methods</title>
		<para>
			The
			<wordasword>PUT</wordasword>
			,
			<wordasword>GET</wordasword>
			,
			<wordasword>POST</wordasword>
			and
			<wordasword>DELETE</wordasword>
			methods
			are typical used in REST based architectures.
			The following table gives an explanation of these operations.
		</para>
		<para>
			<itemizedlist>
				<listitem>
					<para>
						GET defines a reading access of the resource without
						side-effects. The resource is never changed via a GET request,
						e.g., the request has no side effects (idempotent).
					</para>
				</listitem>
				<listitem>
					<para>
						PUT
						creates a new resource. It must also be idempotent.
					</para>
				</listitem>
				<listitem>
					<para>
						DELETE
						removes the resources. The operations are idempotent.
						They
						can get
						repeated without leading to different results.
					</para>
				</listitem>
				<listitem>
					<para>
						POST
						updates an existing resource or creates a new resource.
					</para>
				</listitem>
			</itemizedlist>
		</para>
	</section>

	<section id="rest_webservices">
		<title>RESTFul web services</title>
		<para>
			A RESTFul web services are based on HTTP methods and the
			concept
			of
			REST. A RESTFul web service typically defines the base URI
			for the
			services,
			the supported
			MIME-types (XML, text, JSON,
			user-defined, ...)
			and
			the
			set
			of operations (POST, GET, PUT, DELETE)
			which are supported.
		</para>
	</section>

</section>