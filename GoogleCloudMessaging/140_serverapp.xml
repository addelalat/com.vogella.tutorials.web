<section id="tutorial_serverapp">
== Tutorial: Create your server application
	 As described earlier the application server needs to get an
		authentication key via HTTPS. Afterwards it can send messages to
		the
		device via HTTP by supplying the authentication key and the
		registration ID.
	
	
		We will simulate the Server via a Java program. The
		registration
		ID of the device will be hard-coded into this app as we
		do not have the
		possibility to reach this app via http. Keep in mind
		that this is only
		an example to make it simple to test C2DM.
	
	 To store you credentials use the following class. 
	
		<programlisting>
			<xi:include xmlns:xi="http://www.w3.org/2001/XInclude"
				parse="text" href="./examples/server/SecureStorage.java[]
----
	
	
		Create a new Java project
		"de.vogella.java.c2dm.server". Create the
		following class. This class is an utility class to get the
		authentication token from the Google server.

		
			<programlisting>
				<xi:include xmlns:xi="http://www.w3.org/2001/XInclude"
					parse="text" href="./examples/server/AuthenticationUtil.java[]
----
		
	


	Create the following class "GetAuthenticationToken". This class
		can be used to get the authentication token.
	
	
		<programlisting>
			<xi:include xmlns:xi="http://www.w3.org/2001/XInclude"
				parse="text" href="./examples/server/GetAuthenticationToken.java[]
----
	
	 Run your GetAuthenticationToken class and copy the
		authentication token from the command line.
	
	 Create the following class and maintain your authentication
		token
		and your registration id.
	

	
		<programlisting>
			<xi:include xmlns:xi="http://www.w3.org/2001/XInclude"
				parse="text" href="./examples/server/ServerConfiguration.java[]
----
	

	Also create the following utility class which will allow to send
		messages to your device.
	
	
		<programlisting>
			<xi:include xmlns:xi="http://www.w3.org/2001/XInclude"
				parse="text" href="./examples/server/MessageUtil.java[]
----
	

	Finally create the following class "SendMessageToDevice" which
		can send messages to your device.
	

	
		<programlisting>
			<xi:include xmlns:xi="http://www.w3.org/2001/XInclude"
				parse="text" href="./examples/server/SendMessageToDevice.java[]
----
	
	 Run it. This should send a  message to your device and give
		you the return code "200". On your device you should see a
		notification and if you open it you should see the message displayed.
	



