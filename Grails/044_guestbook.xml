<section id="guestbookapplication">
	<title>Exercise: Extend Grails web application</title>
	<section id="guestbookapplication_target">
		<title>Target</title>
		<para>
			In this exercise you finish the  guestbook application you started
			in
			<xref linkend="firstgrails" />
			.
		</para>
	</section>
	<section id="guestbookapplication_stopserver">
		<title>Stop the server</title>
		<para>
			If you Grails application from
			<xref linkend="firstgrails" />
			is still running, stop the server via
			<keycombo>
				<keycap>Ctrl</keycap>
				<keycap>C</keycap>
			</keycombo>
			.
			We need the command line to
			create more elements.
		</para>
	</section>
	<section id="guestbookapplication_model">
		<title>Create the domain model</title>
		<para>
			Our application does not do anything at the moment. Lets create the
			a
			domain
			model.
			For your feedback system we would like to have:
			<itemizedlist>
				<listitem>
					<para>Class Feedback: The feedback itself</para>
				</listitem>
				<listitem>
					<para>Class User: The person who gives feedback</para>
				</listitem>
				<listitem>
					<para>Class Comment: A remark to the feedback</para>
				</listitem>
			</itemizedlist>
		</para>
		<para>
			Grails can create templates with empty classes and prepared unit
			tests for your domain model. Create the domain model scaffolds via
			the
			following
			commands:
		</para>
		<para>
			<programlisting Language="Bourne">
				<xi:include xmlns:xi="http://www.w3.org/2001/XInclude"
					parse="text" href="./examples/firstgrails/create-domain-class.txt" />
			</programlisting>
		</para>
		<para>
			This creates Groovy classes for the specified domain model in the
			directory
			<filename class="directory">.\grails-app/domain</filename>
			. In the
			directory
			<filename class="directory">.\test\unit</filename>
			you
			find empty files for your unit tests.
		</para>
		<para>Use a text editor to change the classes to the following:</para>
		<para>
			<programlisting language="Java">
				<xi:include xmlns:xi="http://www.w3.org/2001/XInclude"
					parse="text" href="./examples/firstgrails/Feedback.java" />
			</programlisting>
		</para>
		<para>
			<programlisting language="Java">
				<xi:include xmlns:xi="http://www.w3.org/2001/XInclude"
					parse="text" href="./examples/firstgrails/User.java" />
			</programlisting>
		</para>
		<para>
			<programlisting language="Java">
				<xi:include xmlns:xi="http://www.w3.org/2001/XInclude"
					parse="text" href="./examples/firstgrails/Comment.java" />
			</programlisting>
		</para>
		<para>
			Grails allows to define
			constraints for the domain model via a
			static
			method. Some of these
			constraints, e.g.,
			<code>nullable</code>
			are reflected
			in the database, others are
			only used to validate this
			value via the
			user interface, e.g., the URL
			constraint.
		</para>
		<para>
			<tip>
				All model classes come with have a version and id property
				of type
				<code>Long</code>
				and a
				<code>toString()</code>
				method by default.
				These methods will be dynamically injected
				if the
				model has no implementation of it's own.
				<code>dataCreated</code>
				and
				<code>lastUpdated</code>
				are also known by Grails
				and will be filled automatically.
			
		</para>

		<para>
			<tip>
				Changes in the domain model may require a restart of the Grails
				server and running the following command:
				<para>
					<programlisting Language="Bourne">
						<xi:include xmlns:xi="http://www.w3.org/2001/XInclude"
							parse="text" href="./examples/firstgrails/grailsclean.txt" />
					</programlisting>
				</para>
			
		</para>
	</section>


	<section id="guestbookapplication_controllerview">
		<title>Dynamic Scaffolding</title>
		<para>
			Grails supports dynamic and static scaffolding for the user
			interface. If you use dynamic scaffolding, then a user interface for
			the
			domain class is dynamically generated by the Grails runtime. This
			user
			interface allows the operations Create, Read, Update and Delete
			(CRUD).
		</para>
		<para>
			To use dynamic scaffolding, create controllers for your domain
			class via the following commands:
		</para>
		<para>
			<programlisting language="Bourne">
				<xi:include xmlns:xi="http://www.w3.org/2001/XInclude"
					parse="text" href="./examples/firstscripts/generate-controller.txt" />
			</programlisting>
		</para>
		<para>
			This creates controller classes in the directory
			<filename class="directory">/grails-app/controllers</filename>
			.
		</para>
		<para>
			Activate the dynamic scaffolding in each controller by
			replacing the
			line which starts with
			<code>def index</code>
			with
			<code>def scaffold = NameOfTheDomainClass</code>
			.
			For example, for the
			<code>FeedbackController</code>
			.
		</para>
		<para>
			<programlisting>
				<xi:include xmlns:xi="http://www.w3.org/2001/XInclude"
					parse="text" href="./examples/firstgrails/FeedbackController.java" />
			</programlisting>
		</para>
		<para>
			Do this also for
			<code>UserController</code>
			and
			<code>CommentController</code>
			.

		</para>
	</section>
	<section id="guestbookapplication_testing">
		<title>Testing the generated application</title>

		<para>
			Run the application again via:
		</para>
	<para>
		<programlisting Language="Bourne">
			<xi:include xmlns:xi="http://www.w3.org/2001/XInclude"
				parse="text" href="./examples/firstgrails/grailsrun.txt" />
		</programlisting>
	</para>
	<para>
		Browse to
		<ulink url="http://localhost:8080/com.vogella.grails.guestbook">
			http://localhost:8080/com.vogella.grails.guestbook
		</ulink>
		.
		You should have a full CRUD (create, retrieve, update, delete)
		application available. To start the app, click on
		<guilabel>UserController</guilabel>
		and create a user.
	</para>
	<para>
		<mediaobject>
			<imageobject>
				<imagedata fileref="images//home/firstgrails30.png" size="40" />
			</imageobject>
		</mediaobject>
	</para>
	<para>
		<mediaobject>
			<imageobject>
				<imagedata fileref="images//home/firstgrails34.png" size="40" />
			</imageobject>
		</mediaobject>
	</para>
	<para>
		<mediaobject>
			<imageobject>
				<imagedata fileref="images//home/firstgrails40.png" size="40" />
			</imageobject>
		</mediaobject>
	</para>
	<para>
		Afterwards use the
		<guilabel>FeedbackController</guilabel>
		to create a comment.
	</para>
	<para>
		<mediaobject>
			<imageobject>
				<imagedata fileref="images/firstgrails50.png" size="40" />
			</imageobject>
		</mediaobject>
	</para>
	<para>
		Click on
		<guilabel>New Feedback</guilabel>
		and enter a feedback.
	</para>
	<para>
		<mediaobject>
			<imageobject>
				<imagedata fileref="images/firstgrails60.png"/>
			</imageobject>
			<textobject>
				<phrase></phrase>
			</textobject>
		</mediaobject>
	</para>
	
</section>

</section>