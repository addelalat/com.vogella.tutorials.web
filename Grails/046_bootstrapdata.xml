<section id="bootstrapandpersistsdata">
	<title>Exercise: Bootstrap and persists data</title>
	<section id="bootstrapandpersistsdata_target">
		<title>Target</title>
		<para>
			In this exercise you create example data and store the data between
			application restarts. This exercise builds on
			<xref linkend="guestbookapplication" />
			.
		</para>
	</section>

	<section id="firstgrails_scaffolding">
		<title>Bootstrapping example data</title>
		<para>
			Grails allows to simulate example data (this is called
			bootstrapping).
			To create example data, you can use the class
			<filename>BootStrap.groovy</filename>
			from
			the
			directory
			<filename class="directory">./grails-app/conf</filename>
			with some data.
			This class is
			automatically executed whenever the
			server is started
			and can be used
			to create some example data for
			testing.
		</para>

		<para>Change the code to the following.</para>

		<para>
			<programlisting language="java">
				<xi:include xmlns:xi="http://www.w3.org/2001/XInclude"
					parse="text" href="./examples/firstgrails/Bootstrap.java" />
			</programlisting>
		</para>
		<para>
			The grails server should pickup the change automatically. Wait
			a
			while (or re-start the server to be sure) and check if you get an
			error message.
		</para>
	</section>

	<section id="firstgrailsapp_store">
		<title>Store the data</title>
		<para>
			By default, the data maintained in the web application is not
			stored. If your entries should be saved to the database after server
			shutdown, use the following command to start it.
		</para>
		<para>
			<programlisting language="Bourne">
				<xi:include xmlns:xi="http://www.w3.org/2001/XInclude"
					parse="text" href="./examples/firstgrails/prod-run-app.txt" />
			</programlisting>
		</para>
		<para>
			<tip>
				Remove the bootstrapped entries as you will otherwise get errors
				as the system tries to create the same entries again.
			
		</para>
	</section>

	<section id="firstgrails_controllerview_scaffolding">
		<title>Static scaffolding</title>
		<para>
			To switch from dynamic scaffolding to static scaffolding, you
			need to have views. Grails can generate them for you.
		</para>
		<para>
			Type in the following to create a scaffold for the controller
			and the view.
		</para>
		<para>
			<programlisting language="Bourne">
				<xi:include xmlns:xi="http://www.w3.org/2001/XInclude"
					parse="text" href="./examples/firstscripts/generate-views.txt" />
			</programlisting>
		</para>
		<para>
			<tip>
				If you receive the error "Error starting Sun's native2ascii",
				then
				make sure that your environment variable
				<property>JAVA_HOME</property>
				points to
				the JDK and not JRE. The JDK is required for this step.
			
		</para>
		<para>
			Remove
			<code>def scaffold = true</code>
			in your controller to use your
			generated views.
		</para>
		<para>
			This creates the GSP (Groovy Server pages) for your actions in
			the
			directroy
			<filename class="directory">grails-app\views</filename>
			.
			GSP are standard HTML code with
			Groovy mixed in.
			Have a look at the
			coding. The
			controller
			defines
			several actions
			(list,
			show, delete, edit).
			For all
			these
			actions
			corresponding views
			have been
			created under
			<filename class="directory">grails-app/views</filename>
			.
		</para>
	</section>
</section>